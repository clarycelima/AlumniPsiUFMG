{"version":3,"sources":["webpack:///./node_modules/svg-pan-zoom/src/shadow-viewport.js","webpack:///./node_modules/svg-pan-zoom/src/svg-utilities.js","webpack:///./node_modules/svg-pan-zoom/src/utilities.js","webpack:///./node_modules/svg-pan-zoom/src/svg-pan-zoom.js","webpack:///./node_modules/svg-pan-zoom/src/uniwheel.js","webpack:///./node_modules/svg-pan-zoom/src/control-icons.js","webpack:///./node_modules/svg-pan-zoom/src/browserify.js"],"names":["SvgUtils","__webpack_require__","Utils","ShadowViewport","viewport","options","this","init","prototype","originalState","zoom","x","y","activeState","updateCTMCached","proxy","updateCTM","requestAnimationFrame","createRequestAnimationFrame","refreshRate","viewBox","width","height","cacheViewBox","newCTM","processCTM","setCTM","svgViewBox","svg","getAttribute","viewBoxValues","split","filter","v","map","parseFloat","Math","min","updateCTMOnNextFrame","removeAttribute","simpleViewBoxCache","bBox","getBBox","getViewBox","extend","newScale","getCTM","fit","contain","max","a","d","e","f","center","offsetX","offsetY","getOriginalState","getState","getZoom","getRelativeZoom","computeRelativeZoom","scale","getPan","safeCTM","createSVGMatrix","b","c","willZoom","isZoomDifferent","willPan","isPanDifferent","beforeZoom","updateCache","onZoom","preventPan","beforePan","preventPanX","preventPanY","isObject","isNumber","onPan","pendingUpdate","call","window","ctm","defs","onUpdatedCTM","module","exports","_browser","document","documentMode","svgNS","xmlNS","xmlnsNS","xlinkNS","evNS","getBoundingClientRectNormalized","clientWidth","clientHeight","getBoundingClientRect","Error","getOrCreateViewport","selector","isElement","querySelector","childNodes","Array","slice","children","el","nodeName","length","viewportId","Date","toISOString","replace","createElementNS","setAttribute","svgChildren","i","appendChild","classNames","indexOf","push","join","setupSvgAttributes","setAttributeNS","parentNode","style","toLowerCase","internetExplorerRedisplayInterval","refreshDefsGlobal","throttle","allDefs","querySelectorAll","allDefsCount","thisDefs","insertBefore","element","matrix","that","s","transform","setTimeout","getEventPoint","evt","point","createSVGPoint","mouseAndTouchNormalize","clientX","clientY","getSvgCenterPoint","requestTimeout","timeout","callback","target","source","prop","o","HTMLElement","SVGElement","SVGSVGElement","nodeType","Object","toString","n","isNaN","isFinite","getSvg","elementOrSelector","String","tagName","contentDocument","documentElement","getSVGDocument","fn","context","apply","arguments","getType","touches","pageX","rect","left","pageY","top","originalEvent","isDblClick","prevEvt","detail","timeStampDiff","timeStamp","touchesDistance","sqrt","pow","now","getTime","func","wait","args","result","previous","later","leading","remaining","clearTimeout","trailing","floor","Wheel","ControlIcons","SvgPanZoom","optionsDefaults","viewportSelector","panEnabled","controlIconsEnabled","zoomEnabled","dblClickZoomEnabled","mouseWheelZoomEnabled","preventMouseEventsDefault","zoomScaleSensitivity","minZoom","maxZoom","customEventsHandler","eventsListenerElement","passiveListenerOption","passive","state","boundingClientRectNormalized","oldScale","oldPoint","newPoint","publicInstance","getPublicInstance","setBeforeZoom","setOnZoom","setBeforePan","setOnPan","setOnUpdatedCTM","enable","lastMouseWheelEventTime","setupHandlers","eventListeners","mousedown","handleMouseDown","touchstart","mouseup","handleMouseUp","touchend","mousemove","handleMouseMove","touchmove","mouseleave","touchleave","touchcancel","svgElement","instance","haltEventListeners","hasOwnProperty","event","addEventListener","enableMouseWheelZoom","wheelListener","handleMouseWheel","isPassiveListener","on","disableMouseWheelZoom","off","preventDefault","returnValue","delta","deltaY","timeDelta","divider","deltaMode","wheelDelta","abs","log","inversedScreenCTM","getScreenCTM","inverse","relativeMousePoint","matrixTransform","zoomAtPoint","zoomScale","zoomAbsolute","oldCTM","relativePoint","modifier","translate","multiply","absolute","publicZoom","computeFromRelativeZoom","publicZoomAtPoint","resetZoom","resetPan","pan","reset","handleDblClick","targetClass","zoomFactor","shiftKey","firstEventCTM","stateOrigin","viewportCTM","updateBBox","panBy","resize","disableControlIcons","enableControlIcons","destroy","removeEventListener","instancesStore","pi","enablePan","disablePan","isPanEnabled","enableZoom","disableZoom","isZoomEnabled","disable","isControlIconsEnabled","enableDblClickZoom","disableDblClickZoom","isDblClickZoomEnabled","isMouseWheelZoomEnabled","setZoomScaleSensitivity","setMinZoom","setMaxZoom","zoomBy","zoomAtPointBy","zoomIn","zoomOut","getSizes","realZoom","svgPanZoom","_addEventListener","_removeEventListener","support","prefix","fns","passiveOption","createCallback","srcElement","type","deltaX","delatZ","wheelDeltaX","getCallback","removeCallback","splice","_addWheelListener","elem","eventName","cb","_removeWheelListener","addWheelListener","removeWheelListener","createElement","undefined","onmousewheel","styleEl","textContent","zoomGroup","_createZoomIn","_createZoomReset","_createZoomOut","controlIcons","zoomInBackground","zoomInShape","resetPanZoomControl","resetPanZoomControlBackground","resetPanZoomControlShape1","resetPanZoomControlShape2","zoomOutBackground","zoomOutShape","removeChild"],"mappings":"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","file":"js/artigos-fruchtermans~completa~redes.e9e0108b.js","sourcesContent":["var SvgUtils = require('./svg-utilities')\n  , Utils = require('./utilities')\n  ;\n\nvar ShadowViewport = function(viewport, options){\n  this.init(viewport, options)\n}\n\n/**\n * Initialization\n *\n * @param  {SVGElement} viewport\n * @param  {Object} options\n */\nShadowViewport.prototype.init = function(viewport, options) {\n  // DOM Elements\n  this.viewport = viewport\n  this.options = options\n\n  // State cache\n  this.originalState = {zoom: 1, x: 0, y: 0}\n  this.activeState = {zoom: 1, x: 0, y: 0}\n\n  this.updateCTMCached = Utils.proxy(this.updateCTM, this)\n\n  // Create a custom requestAnimationFrame taking in account refreshRate\n  this.requestAnimationFrame = Utils.createRequestAnimationFrame(this.options.refreshRate)\n\n  // ViewBox\n  this.viewBox = {x: 0, y: 0, width: 0, height: 0}\n  this.cacheViewBox()\n\n  // Process CTM\n  var newCTM = this.processCTM()\n\n  // Update viewport CTM and cache zoom and pan\n  this.setCTM(newCTM)\n\n  // Update CTM in this frame\n  this.updateCTM()\n}\n\n/**\n * Cache initial viewBox value\n * If no viewBox is defined, then use viewport size/position instead for viewBox values\n */\nShadowViewport.prototype.cacheViewBox = function() {\n  var svgViewBox = this.options.svg.getAttribute('viewBox')\n\n  if (svgViewBox) {\n    var viewBoxValues = svgViewBox.split(/[\\s\\,]/).filter(function(v){return v}).map(parseFloat)\n\n    // Cache viewbox x and y offset\n    this.viewBox.x = viewBoxValues[0]\n    this.viewBox.y = viewBoxValues[1]\n    this.viewBox.width = viewBoxValues[2]\n    this.viewBox.height = viewBoxValues[3]\n\n    var zoom = Math.min(this.options.width / this.viewBox.width, this.options.height / this.viewBox.height)\n\n    // Update active state\n    this.activeState.zoom = zoom\n    this.activeState.x = (this.options.width - this.viewBox.width * zoom) / 2\n    this.activeState.y = (this.options.height - this.viewBox.height * zoom) / 2\n\n    // Force updating CTM\n    this.updateCTMOnNextFrame()\n\n    this.options.svg.removeAttribute('viewBox')\n  } else {\n    this.simpleViewBoxCache()\n  }\n}\n\n/**\n * Recalculate viewport sizes and update viewBox cache\n */\nShadowViewport.prototype.simpleViewBoxCache = function() {\n  var bBox = this.viewport.getBBox()\n\n  this.viewBox.x = bBox.x\n  this.viewBox.y = bBox.y\n  this.viewBox.width = bBox.width\n  this.viewBox.height = bBox.height\n}\n\n/**\n * Returns a viewbox object. Safe to alter\n *\n * @return {Object} viewbox object\n */\nShadowViewport.prototype.getViewBox = function() {\n  return Utils.extend({}, this.viewBox)\n}\n\n/**\n * Get initial zoom and pan values. Save them into originalState\n * Parses viewBox attribute to alter initial sizes\n *\n * @return {CTM} CTM object based on options\n */\nShadowViewport.prototype.processCTM = function() {\n  var newCTM = this.getCTM()\n\n  if (this.options.fit || this.options.contain) {\n    var newScale;\n    if (this.options.fit) {\n      newScale = Math.min(this.options.width/this.viewBox.width, this.options.height/this.viewBox.height);\n    } else {\n      newScale = Math.max(this.options.width/this.viewBox.width, this.options.height/this.viewBox.height);\n    }\n\n    newCTM.a = newScale; //x-scale\n    newCTM.d = newScale; //y-scale\n    newCTM.e = -this.viewBox.x * newScale; //x-transform\n    newCTM.f = -this.viewBox.y * newScale; //y-transform\n  }\n\n  if (this.options.center) {\n    var offsetX = (this.options.width - (this.viewBox.width + this.viewBox.x * 2) * newCTM.a) * 0.5\n      , offsetY = (this.options.height - (this.viewBox.height + this.viewBox.y * 2) * newCTM.a) * 0.5\n\n    newCTM.e = offsetX\n    newCTM.f = offsetY\n  }\n\n  // Cache initial values. Based on activeState and fix+center opitons\n  this.originalState.zoom = newCTM.a\n  this.originalState.x = newCTM.e\n  this.originalState.y = newCTM.f\n\n  return newCTM\n}\n\n/**\n * Return originalState object. Safe to alter\n *\n * @return {Object}\n */\nShadowViewport.prototype.getOriginalState = function() {\n  return Utils.extend({}, this.originalState)\n}\n\n/**\n * Return actualState object. Safe to alter\n *\n * @return {Object}\n */\nShadowViewport.prototype.getState = function() {\n  return Utils.extend({}, this.activeState)\n}\n\n/**\n * Get zoom scale\n *\n * @return {Float} zoom scale\n */\nShadowViewport.prototype.getZoom = function() {\n  return this.activeState.zoom\n}\n\n/**\n * Get zoom scale for pubilc usage\n *\n * @return {Float} zoom scale\n */\nShadowViewport.prototype.getRelativeZoom = function() {\n  return this.activeState.zoom / this.originalState.zoom\n}\n\n/**\n * Compute zoom scale for pubilc usage\n *\n * @return {Float} zoom scale\n */\nShadowViewport.prototype.computeRelativeZoom = function(scale) {\n  return scale / this.originalState.zoom\n}\n\n/**\n * Get pan\n *\n * @return {Object}\n */\nShadowViewport.prototype.getPan = function() {\n  return {x: this.activeState.x, y: this.activeState.y}\n}\n\n/**\n * Return cached viewport CTM value that can be safely modified\n *\n * @return {SVGMatrix}\n */\nShadowViewport.prototype.getCTM = function() {\n  var safeCTM = this.options.svg.createSVGMatrix()\n\n  // Copy values manually as in FF they are not itterable\n  safeCTM.a = this.activeState.zoom\n  safeCTM.b = 0\n  safeCTM.c = 0\n  safeCTM.d = this.activeState.zoom\n  safeCTM.e = this.activeState.x\n  safeCTM.f = this.activeState.y\n\n  return safeCTM\n}\n\n/**\n * Set a new CTM\n *\n * @param {SVGMatrix} newCTM\n */\nShadowViewport.prototype.setCTM = function(newCTM) {\n  var willZoom = this.isZoomDifferent(newCTM)\n    , willPan = this.isPanDifferent(newCTM)\n\n  if (willZoom || willPan) {\n    // Before zoom\n    if (willZoom) {\n      // If returns false then cancel zooming\n      if (this.options.beforeZoom(this.getRelativeZoom(), this.computeRelativeZoom(newCTM.a)) === false) {\n        newCTM.a = newCTM.d = this.activeState.zoom\n        willZoom = false\n      } else {\n        this.updateCache(newCTM);\n        this.options.onZoom(this.getRelativeZoom())\n      }\n    }\n\n    // Before pan\n    if (willPan) {\n      var preventPan = this.options.beforePan(this.getPan(), {x: newCTM.e, y: newCTM.f})\n          // If prevent pan is an object\n        , preventPanX = false\n        , preventPanY = false\n\n      // If prevent pan is Boolean false\n      if (preventPan === false) {\n        // Set x and y same as before\n        newCTM.e = this.getPan().x\n        newCTM.f = this.getPan().y\n\n        preventPanX = preventPanY = true\n      } else if (Utils.isObject(preventPan)) {\n        // Check for X axes attribute\n        if (preventPan.x === false) {\n          // Prevent panning on x axes\n          newCTM.e = this.getPan().x\n          preventPanX = true\n        } else if (Utils.isNumber(preventPan.x)) {\n          // Set a custom pan value\n          newCTM.e = preventPan.x\n        }\n\n        // Check for Y axes attribute\n        if (preventPan.y === false) {\n          // Prevent panning on x axes\n          newCTM.f = this.getPan().y\n          preventPanY = true\n        } else if (Utils.isNumber(preventPan.y)) {\n          // Set a custom pan value\n          newCTM.f = preventPan.y\n        }\n      }\n\n      // Update willPan flag\n      // Check if newCTM is still different\n      if ((preventPanX && preventPanY) || !this.isPanDifferent(newCTM)) {\n        willPan = false\n      } else {\n        this.updateCache(newCTM);\n        this.options.onPan(this.getPan());\n      }\n    }\n\n    // Check again if should zoom or pan\n    if (willZoom || willPan) {\n      this.updateCTMOnNextFrame()\n    }\n  }\n}\n\nShadowViewport.prototype.isZoomDifferent = function(newCTM) {\n  return this.activeState.zoom !== newCTM.a\n}\n\nShadowViewport.prototype.isPanDifferent = function(newCTM) {\n  return this.activeState.x !== newCTM.e || this.activeState.y !== newCTM.f\n}\n\n\n/**\n * Update cached CTM and active state\n *\n * @param {SVGMatrix} newCTM\n */\nShadowViewport.prototype.updateCache = function(newCTM) {\n  this.activeState.zoom = newCTM.a\n  this.activeState.x = newCTM.e\n  this.activeState.y = newCTM.f\n}\n\nShadowViewport.prototype.pendingUpdate = false\n\n/**\n * Place a request to update CTM on next Frame\n */\nShadowViewport.prototype.updateCTMOnNextFrame = function() {\n  if (!this.pendingUpdate) {\n    // Lock\n    this.pendingUpdate = true\n\n    // Throttle next update\n    this.requestAnimationFrame.call(window, this.updateCTMCached)\n  }\n}\n\n/**\n * Update viewport CTM with cached CTM\n */\nShadowViewport.prototype.updateCTM = function() {\n  var ctm = this.getCTM()\n\n  // Updates SVG element\n  SvgUtils.setCTM(this.viewport, ctm, this.defs)\n\n  // Free the lock\n  this.pendingUpdate = false\n\n  // Notify about the update\n  if(this.options.onUpdatedCTM) {\n    this.options.onUpdatedCTM(ctm)\n  }\n}\n\nmodule.exports = function(viewport, options){\n  return new ShadowViewport(viewport, options)\n}\n","var Utils = require('./utilities')\n  , _browser = 'unknown'\n  ;\n\n// http://stackoverflow.com/questions/9847580/how-to-detect-safari-chrome-ie-firefox-and-opera-browser\nif (/*@cc_on!@*/false || !!document.documentMode) { // internet explorer\n  _browser = 'ie';\n}\n\nmodule.exports = {\n  svgNS:  'http://www.w3.org/2000/svg'\n, xmlNS:  'http://www.w3.org/XML/1998/namespace'\n, xmlnsNS:  'http://www.w3.org/2000/xmlns/'\n, xlinkNS:  'http://www.w3.org/1999/xlink'\n, evNS:  'http://www.w3.org/2001/xml-events'\n\n  /**\n   * Get svg dimensions: width and height\n   *\n   * @param  {SVGSVGElement} svg\n   * @return {Object}     {width: 0, height: 0}\n   */\n, getBoundingClientRectNormalized: function(svg) {\n    if (svg.clientWidth && svg.clientHeight) {\n      return {width: svg.clientWidth, height: svg.clientHeight}\n    } else if (!!svg.getBoundingClientRect()) {\n      return svg.getBoundingClientRect();\n    } else {\n      throw new Error('Cannot get BoundingClientRect for SVG.');\n    }\n  }\n\n  /**\n   * Gets g element with class of \"viewport\" or creates it if it doesn't exist\n   *\n   * @param  {SVGSVGElement} svg\n   * @return {SVGElement}     g (group) element\n   */\n, getOrCreateViewport: function(svg, selector) {\n    var viewport = null\n\n    if (Utils.isElement(selector)) {\n      viewport = selector\n    } else {\n      viewport = svg.querySelector(selector)\n    }\n\n    // Check if there is just one main group in SVG\n    if (!viewport) {\n      var childNodes = Array.prototype.slice.call(svg.childNodes || svg.children).filter(function(el){\n        return el.nodeName !== 'defs' && el.nodeName !== '#text'\n      })\n\n      // Node name should be SVGGElement and should have no transform attribute\n      // Groups with transform are not used as viewport because it involves parsing of all transform possibilities\n      if (childNodes.length === 1 && childNodes[0].nodeName === 'g' && childNodes[0].getAttribute('transform') === null) {\n        viewport = childNodes[0]\n      }\n    }\n\n    // If no favorable group element exists then create one\n    if (!viewport) {\n      var viewportId = 'viewport-' + new Date().toISOString().replace(/\\D/g, '');\n      viewport = document.createElementNS(this.svgNS, 'g');\n      viewport.setAttribute('id', viewportId);\n\n      // Internet Explorer (all versions?) can't use childNodes, but other browsers prefer (require?) using childNodes\n      var svgChildren = svg.childNodes || svg.children;\n      if (!!svgChildren && svgChildren.length > 0) {\n        for (var i = svgChildren.length; i > 0; i--) {\n          // Move everything into viewport except defs\n          if (svgChildren[svgChildren.length - i].nodeName !== 'defs') {\n            viewport.appendChild(svgChildren[svgChildren.length - i]);\n          }\n        }\n      }\n      svg.appendChild(viewport);\n    }\n\n    // Parse class names\n    var classNames = [];\n    if (viewport.getAttribute('class')) {\n      classNames = viewport.getAttribute('class').split(' ')\n    }\n\n    // Set class (if not set already)\n    if (!~classNames.indexOf('svg-pan-zoom_viewport')) {\n      classNames.push('svg-pan-zoom_viewport')\n      viewport.setAttribute('class', classNames.join(' '))\n    }\n\n    return viewport\n  }\n\n  /**\n   * Set SVG attributes\n   *\n   * @param  {SVGSVGElement} svg\n   */\n  , setupSvgAttributes: function(svg) {\n    // Setting default attributes\n    svg.setAttribute('xmlns', this.svgNS);\n    svg.setAttributeNS(this.xmlnsNS, 'xmlns:xlink', this.xlinkNS);\n    svg.setAttributeNS(this.xmlnsNS, 'xmlns:ev', this.evNS);\n\n    // Needed for Internet Explorer, otherwise the viewport overflows\n    if (svg.parentNode !== null) {\n      var style = svg.getAttribute('style') || '';\n      if (style.toLowerCase().indexOf('overflow') === -1) {\n        svg.setAttribute('style', 'overflow: hidden; ' + style);\n      }\n    }\n  }\n\n/**\n * How long Internet Explorer takes to finish updating its display (ms).\n */\n, internetExplorerRedisplayInterval: 300\n\n/**\n * Forces the browser to redisplay all SVG elements that rely on an\n * element defined in a 'defs' section. It works globally, for every\n * available defs element on the page.\n * The throttling is intentionally global.\n *\n * This is only needed for IE. It is as a hack to make markers (and 'use' elements?)\n * visible after pan/zoom when there are multiple SVGs on the page.\n * See bug report: https://connect.microsoft.com/IE/feedback/details/781964/\n * also see svg-pan-zoom issue: https://github.com/ariutta/svg-pan-zoom/issues/62\n */\n, refreshDefsGlobal: Utils.throttle(function() {\n    var allDefs = document.querySelectorAll('defs');\n    var allDefsCount = allDefs.length;\n    for (var i = 0; i < allDefsCount; i++) {\n      var thisDefs = allDefs[i];\n      thisDefs.parentNode.insertBefore(thisDefs, thisDefs);\n    }\n  }, this ? this.internetExplorerRedisplayInterval : null)\n\n  /**\n   * Sets the current transform matrix of an element\n   *\n   * @param {SVGElement} element\n   * @param {SVGMatrix} matrix  CTM\n   * @param {SVGElement} defs\n   */\n, setCTM: function(element, matrix, defs) {\n    var that = this\n      , s = 'matrix(' + matrix.a + ',' + matrix.b + ',' + matrix.c + ',' + matrix.d + ',' + matrix.e + ',' + matrix.f + ')';\n\n    element.setAttributeNS(null, 'transform', s);\n    if ('transform' in element.style) {\n      element.style.transform = s;\n    } else if ('-ms-transform' in element.style) {\n      element.style['-ms-transform'] = s;\n    } else if ('-webkit-transform' in element.style) {\n      element.style['-webkit-transform'] = s;\n    }\n\n    // IE has a bug that makes markers disappear on zoom (when the matrix \"a\" and/or \"d\" elements change)\n    // see http://stackoverflow.com/questions/17654578/svg-marker-does-not-work-in-ie9-10\n    // and http://srndolha.wordpress.com/2013/11/25/svg-line-markers-may-disappear-in-internet-explorer-11/\n    if (_browser === 'ie' && !!defs) {\n      // this refresh is intended for redisplaying the SVG during zooming\n      defs.parentNode.insertBefore(defs, defs);\n      // this refresh is intended for redisplaying the other SVGs on a page when panning a given SVG\n      // it is also needed for the given SVG itself, on zoomEnd, if the SVG contains any markers that\n      // are located under any other element(s).\n      window.setTimeout(function() {\n        that.refreshDefsGlobal();\n      }, that.internetExplorerRedisplayInterval);\n    }\n  }\n\n  /**\n   * Instantiate an SVGPoint object with given event coordinates\n   *\n   * @param {Event} evt\n   * @param  {SVGSVGElement} svg\n   * @return {SVGPoint}     point\n   */\n, getEventPoint: function(evt, svg) {\n    var point = svg.createSVGPoint()\n\n    Utils.mouseAndTouchNormalize(evt, svg)\n\n    point.x = evt.clientX\n    point.y = evt.clientY\n\n    return point\n  }\n\n  /**\n   * Get SVG center point\n   *\n   * @param  {SVGSVGElement} svg\n   * @return {SVGPoint}\n   */\n, getSvgCenterPoint: function(svg, width, height) {\n    return this.createSVGPoint(svg, width / 2, height / 2)\n  }\n\n  /**\n   * Create a SVGPoint with given x and y\n   *\n   * @param  {SVGSVGElement} svg\n   * @param  {Number} x\n   * @param  {Number} y\n   * @return {SVGPoint}\n   */\n, createSVGPoint: function(svg, x, y) {\n    var point = svg.createSVGPoint()\n    point.x = x\n    point.y = y\n\n    return point\n  }\n}\n","module.exports = {\n  /**\n   * Extends an object\n   *\n   * @param  {Object} target object to extend\n   * @param  {Object} source object to take properties from\n   * @return {Object}        extended object\n   */\n  extend: function(target, source) {\n    target = target || {};\n    for (var prop in source) {\n      // Go recursively\n      if (this.isObject(source[prop])) {\n        target[prop] = this.extend(target[prop], source[prop])\n      } else {\n        target[prop] = source[prop]\n      }\n    }\n    return target;\n  }\n\n  /**\n   * Checks if an object is a DOM element\n   *\n   * @param  {Object}  o HTML element or String\n   * @return {Boolean}   returns true if object is a DOM element\n   */\n, isElement: function(o){\n    return (\n      o instanceof HTMLElement || o instanceof SVGElement || o instanceof SVGSVGElement || //DOM2\n      (o && typeof o === 'object' && o !== null && o.nodeType === 1 && typeof o.nodeName === 'string')\n    );\n  }\n\n  /**\n   * Checks if an object is an Object\n   *\n   * @param  {Object}  o Object\n   * @return {Boolean}   returns true if object is an Object\n   */\n, isObject: function(o){\n    return Object.prototype.toString.call(o) === '[object Object]';\n  }\n\n  /**\n   * Checks if variable is Number\n   *\n   * @param  {Integer|Float}  n\n   * @return {Boolean}   returns true if variable is Number\n   */\n, isNumber: function(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  /**\n   * Search for an SVG element\n   *\n   * @param  {Object|String} elementOrSelector DOM Element or selector String\n   * @return {Object|Null}                   SVG or null\n   */\n, getSvg: function(elementOrSelector) {\n    var element\n      , svg;\n\n    if (!this.isElement(elementOrSelector)) {\n      // If selector provided\n      if (typeof elementOrSelector === 'string' || elementOrSelector instanceof String) {\n        // Try to find the element\n        element = document.querySelector(elementOrSelector)\n\n        if (!element) {\n          throw new Error('Provided selector did not find any elements. Selector: ' + elementOrSelector)\n          return null\n        }\n      } else {\n        throw new Error('Provided selector is not an HTML object nor String')\n        return null\n      }\n    } else {\n      element = elementOrSelector\n    }\n\n    if (element.tagName.toLowerCase() === 'svg') {\n      svg = element;\n    } else {\n      if (element.tagName.toLowerCase() === 'object') {\n        svg = element.contentDocument.documentElement;\n      } else {\n        if (element.tagName.toLowerCase() === 'embed') {\n          svg = element.getSVGDocument().documentElement;\n        } else {\n          if (element.tagName.toLowerCase() === 'img') {\n            throw new Error('Cannot script an SVG in an \"img\" element. Please use an \"object\" element or an in-line SVG.');\n          } else {\n            throw new Error('Cannot get SVG.');\n          }\n          return null\n        }\n      }\n    }\n\n    return svg\n  }\n\n  /**\n   * Attach a given context to a function\n   * @param  {Function} fn      Function\n   * @param  {Object}   context Context\n   * @return {Function}           Function with certain context\n   */\n, proxy: function(fn, context) {\n    return function() {\n      return fn.apply(context, arguments)\n    }\n  }\n\n  /**\n   * Returns object type\n   * Uses toString that returns [object SVGPoint]\n   * And than parses object type from string\n   *\n   * @param  {Object} o Any object\n   * @return {String}   Object type\n   */\n, getType: function(o) {\n    return Object.prototype.toString.apply(o).replace(/^\\[object\\s/, '').replace(/\\]$/, '')\n  }\n\n  /**\n   * If it is a touch event than add clientX and clientY to event object\n   *\n   * @param  {Event} evt\n   * @param  {SVGSVGElement} svg\n   */\n, mouseAndTouchNormalize: function(evt, svg) {\n    // If no clientX then fallback\n    if (evt.clientX === void 0 || evt.clientX === null) {\n      // Fallback\n      evt.clientX = 0\n      evt.clientY = 0\n\n      // If it is a touch event\n      if (evt.touches !== void 0 && evt.touches.length) {\n        if (evt.touches[0].clientX !== void 0) {\n          evt.clientX = evt.touches[0].clientX\n          evt.clientY = evt.touches[0].clientY\n        } else if (evt.touches[0].pageX !== void 0) {\n          var rect = svg.getBoundingClientRect();\n\n          evt.clientX = evt.touches[0].pageX - rect.left\n          evt.clientY = evt.touches[0].pageY - rect.top\n        }\n      // If it is a custom event\n      } else if (evt.originalEvent !== void 0) {\n        if (evt.originalEvent.clientX !== void 0) {\n          evt.clientX = evt.originalEvent.clientX\n          evt.clientY = evt.originalEvent.clientY\n        }\n      }\n    }\n  }\n\n  /**\n   * Check if an event is a double click/tap\n   * TODO: For touch gestures use a library (hammer.js) that takes in account other events\n   * (touchmove and touchend). It should take in account tap duration and traveled distance\n   *\n   * @param  {Event}  evt\n   * @param  {Event}  prevEvt Previous Event\n   * @return {Boolean}\n   */\n, isDblClick: function(evt, prevEvt) {\n    // Double click detected by browser\n    if (evt.detail === 2) {\n      return true;\n    }\n    // Try to compare events\n    else if (prevEvt !== void 0 && prevEvt !== null) {\n      var timeStampDiff = evt.timeStamp - prevEvt.timeStamp // should be lower than 250 ms\n        , touchesDistance = Math.sqrt(Math.pow(evt.clientX - prevEvt.clientX, 2) + Math.pow(evt.clientY - prevEvt.clientY, 2))\n\n      return timeStampDiff < 250 && touchesDistance < 10\n    }\n\n    // Nothing found\n    return false;\n  }\n\n  /**\n   * Returns current timestamp as an integer\n   *\n   * @return {Number}\n   */\n, now: Date.now || function() {\n    return new Date().getTime();\n  }\n\n  // From underscore.\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n// jscs:disable\n// jshint ignore:start\n, throttle: function(func, wait, options) {\n    var that = this;\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : that.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = that.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        clearTimeout(timeout);\n        timeout = null;\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  }\n// jshint ignore:end\n// jscs:enable\n\n  /**\n   * Create a requestAnimationFrame simulation\n   *\n   * @param  {Number|String} refreshRate\n   * @return {Function}\n   */\n, createRequestAnimationFrame: function(refreshRate) {\n    var timeout = null\n\n    // Convert refreshRate to timeout\n    if (refreshRate !== 'auto' && refreshRate < 60 && refreshRate > 1) {\n      timeout = Math.floor(1000 / refreshRate)\n    }\n\n    if (timeout === null) {\n      return window.requestAnimationFrame || requestTimeout(33)\n    } else {\n      return requestTimeout(timeout)\n    }\n  }\n}\n\n/**\n * Create a callback that will execute after a given timeout\n *\n * @param  {Function} timeout\n * @return {Function}\n */\nfunction requestTimeout(timeout) {\n  return function(callback) {\n    window.setTimeout(callback, timeout)\n  }\n}\n","var Wheel = require('./uniwheel')\n, ControlIcons = require('./control-icons')\n, Utils = require('./utilities')\n, SvgUtils = require('./svg-utilities')\n, ShadowViewport = require('./shadow-viewport')\n\nvar SvgPanZoom = function(svg, options) {\n  this.init(svg, options)\n}\n\nvar optionsDefaults = {\n  viewportSelector: '.svg-pan-zoom_viewport' // Viewport selector. Can be querySelector string or SVGElement\n, panEnabled: true // enable or disable panning (default enabled)\n, controlIconsEnabled: false // insert icons to give user an option in addition to mouse events to control pan/zoom (default disabled)\n, zoomEnabled: true // enable or disable zooming (default enabled)\n, dblClickZoomEnabled: true // enable or disable zooming by double clicking (default enabled)\n, mouseWheelZoomEnabled: true // enable or disable zooming by mouse wheel (default enabled)\n, preventMouseEventsDefault: true // enable or disable preventDefault for mouse events\n, zoomScaleSensitivity: 0.1 // Zoom sensitivity\n, minZoom: 0.5 // Minimum Zoom level\n, maxZoom: 10 // Maximum Zoom level\n, fit: true // enable or disable viewport fit in SVG (default true)\n, contain: false // enable or disable viewport contain the svg (default false)\n, center: true // enable or disable viewport centering in SVG (default true)\n, refreshRate: 'auto' // Maximum number of frames per second (altering SVG's viewport)\n, beforeZoom: null\n, onZoom: null\n, beforePan: null\n, onPan: null\n, customEventsHandler: null\n, eventsListenerElement: null\n, onUpdatedCTM: null\n}\n\nvar passiveListenerOption = {passive: true};\n\nSvgPanZoom.prototype.init = function(svg, options) {\n  var that = this\n\n  this.svg = svg\n  this.defs = svg.querySelector('defs')\n\n  // Add default attributes to SVG\n  SvgUtils.setupSvgAttributes(this.svg)\n\n  // Set options\n  this.options = Utils.extend(Utils.extend({}, optionsDefaults), options)\n\n  // Set default state\n  this.state = 'none'\n\n  // Get dimensions\n  var boundingClientRectNormalized = SvgUtils.getBoundingClientRectNormalized(svg)\n  this.width = boundingClientRectNormalized.width\n  this.height = boundingClientRectNormalized.height\n\n  // Init shadow viewport\n  this.viewport = ShadowViewport(SvgUtils.getOrCreateViewport(this.svg, this.options.viewportSelector), {\n    svg: this.svg\n  , width: this.width\n  , height: this.height\n  , fit: this.options.fit\n  , contain: this.options.contain\n  , center: this.options.center\n  , refreshRate: this.options.refreshRate\n  // Put callbacks into functions as they can change through time\n  , beforeZoom: function(oldScale, newScale) {\n      if (that.viewport && that.options.beforeZoom) {return that.options.beforeZoom(oldScale, newScale)}\n    }\n  , onZoom: function(scale) {\n      if (that.viewport && that.options.onZoom) {return that.options.onZoom(scale)}\n    }\n  , beforePan: function(oldPoint, newPoint) {\n      if (that.viewport && that.options.beforePan) {return that.options.beforePan(oldPoint, newPoint)}\n    }\n  , onPan: function(point) {\n      if (that.viewport && that.options.onPan) {return that.options.onPan(point)}\n    }\n  , onUpdatedCTM: function(ctm) {\n      if (that.viewport && that.options.onUpdatedCTM) {return that.options.onUpdatedCTM(ctm)}\n    }\n  })\n\n  // Wrap callbacks into public API context\n  var publicInstance = this.getPublicInstance()\n  publicInstance.setBeforeZoom(this.options.beforeZoom)\n  publicInstance.setOnZoom(this.options.onZoom)\n  publicInstance.setBeforePan(this.options.beforePan)\n  publicInstance.setOnPan(this.options.onPan)\n  publicInstance.setOnUpdatedCTM(this.options.onUpdatedCTM)\n\n  if (this.options.controlIconsEnabled) {\n    ControlIcons.enable(this)\n  }\n\n  // Init events handlers\n  this.lastMouseWheelEventTime = Date.now()\n  this.setupHandlers()\n}\n\n/**\n * Register event handlers\n */\nSvgPanZoom.prototype.setupHandlers = function() {\n  var that = this\n    , prevEvt = null // use for touchstart event to detect double tap\n    ;\n\n  this.eventListeners = {\n    // Mouse down group\n    mousedown: function(evt) {\n      var result = that.handleMouseDown(evt, prevEvt);\n      prevEvt = evt\n      return result;\n    }\n  , touchstart: function(evt) {\n      var result = that.handleMouseDown(evt, prevEvt);\n      prevEvt = evt\n      return result;\n    }\n\n    // Mouse up group\n  , mouseup: function(evt) {\n      return that.handleMouseUp(evt);\n    }\n  , touchend: function(evt) {\n      return that.handleMouseUp(evt);\n    }\n\n    // Mouse move group\n  , mousemove: function(evt) {\n      return that.handleMouseMove(evt);\n    }\n  , touchmove: function(evt) {\n      return that.handleMouseMove(evt);\n    }\n\n    // Mouse leave group\n  , mouseleave: function(evt) {\n      return that.handleMouseUp(evt);\n    }\n  , touchleave: function(evt) {\n      return that.handleMouseUp(evt);\n    }\n  , touchcancel: function(evt) {\n      return that.handleMouseUp(evt);\n    }\n  }\n\n  // Init custom events handler if available\n  if (this.options.customEventsHandler != null) { // jshint ignore:line\n    this.options.customEventsHandler.init({\n      svgElement: this.svg\n    , eventsListenerElement: this.options.eventsListenerElement\n    , instance: this.getPublicInstance()\n    })\n\n    // Custom event handler may halt builtin listeners\n    var haltEventListeners = this.options.customEventsHandler.haltEventListeners\n    if (haltEventListeners && haltEventListeners.length) {\n      for (var i = haltEventListeners.length - 1; i >= 0; i--) {\n        if (this.eventListeners.hasOwnProperty(haltEventListeners[i])) {\n          delete this.eventListeners[haltEventListeners[i]]\n        }\n      }\n    }\n  }\n\n  // Bind eventListeners\n  for (var event in this.eventListeners) {\n    // Attach event to eventsListenerElement or SVG if not available\n    (this.options.eventsListenerElement || this.svg)\n      .addEventListener(event, this.eventListeners[event], !this.options.preventMouseEventsDefault ? passiveListenerOption : false)\n  }\n\n  // Zoom using mouse wheel\n  if (this.options.mouseWheelZoomEnabled) {\n    this.options.mouseWheelZoomEnabled = false // set to false as enable will set it back to true\n    this.enableMouseWheelZoom()\n  }\n}\n\n/**\n * Enable ability to zoom using mouse wheel\n */\nSvgPanZoom.prototype.enableMouseWheelZoom = function() {\n  if (!this.options.mouseWheelZoomEnabled) {\n    var that = this\n\n    // Mouse wheel listener\n    this.wheelListener = function(evt) {\n      return that.handleMouseWheel(evt);\n    }\n\n    // Bind wheelListener\n    var isPassiveListener = !this.options.preventMouseEventsDefault\n    Wheel.on(this.options.eventsListenerElement || this.svg, this.wheelListener, isPassiveListener)\n\n    this.options.mouseWheelZoomEnabled = true\n  }\n}\n\n/**\n * Disable ability to zoom using mouse wheel\n */\nSvgPanZoom.prototype.disableMouseWheelZoom = function() {\n  if (this.options.mouseWheelZoomEnabled) {\n    var isPassiveListener = !this.options.preventMouseEventsDefault\n    Wheel.off(this.options.eventsListenerElement || this.svg, this.wheelListener, isPassiveListener)\n    this.options.mouseWheelZoomEnabled = false\n  }\n}\n\n/**\n * Handle mouse wheel event\n *\n * @param  {Event} evt\n */\nSvgPanZoom.prototype.handleMouseWheel = function(evt) {\n  if (!this.options.zoomEnabled || this.state !== 'none') {\n    return;\n  }\n\n  if (this.options.preventMouseEventsDefault){\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    } else {\n      evt.returnValue = false;\n    }\n  }\n\n  // Default delta in case that deltaY is not available\n  var delta = evt.deltaY || 1\n    , timeDelta = Date.now() - this.lastMouseWheelEventTime\n    , divider = 3 + Math.max(0, 30 - timeDelta)\n\n  // Update cache\n  this.lastMouseWheelEventTime = Date.now()\n\n  // Make empirical adjustments for browsers that give deltaY in pixels (deltaMode=0)\n  if ('deltaMode' in evt && evt.deltaMode === 0 && evt.wheelDelta) {\n    delta = evt.deltaY === 0 ? 0 :  Math.abs(evt.wheelDelta) / evt.deltaY\n  }\n\n  delta = -0.3 < delta && delta < 0.3 ? delta : (delta > 0 ? 1 : -1) * Math.log(Math.abs(delta) + 10) / divider\n\n  var inversedScreenCTM = this.svg.getScreenCTM().inverse()\n    , relativeMousePoint = SvgUtils.getEventPoint(evt, this.svg).matrixTransform(inversedScreenCTM)\n    , zoom = Math.pow(1 + this.options.zoomScaleSensitivity, (-1) * delta); // multiplying by neg. 1 so as to make zoom in/out behavior match Google maps behavior\n\n  this.zoomAtPoint(zoom, relativeMousePoint)\n}\n\n/**\n * Zoom in at a SVG point\n *\n * @param  {SVGPoint} point\n * @param  {Float} zoomScale    Number representing how much to zoom\n * @param  {Boolean} zoomAbsolute Default false. If true, zoomScale is treated as an absolute value.\n *                                Otherwise, zoomScale is treated as a multiplied (e.g. 1.10 would zoom in 10%)\n */\nSvgPanZoom.prototype.zoomAtPoint = function(zoomScale, point, zoomAbsolute) {\n  var originalState = this.viewport.getOriginalState()\n\n  if (!zoomAbsolute) {\n    // Fit zoomScale in set bounds\n    if (this.getZoom() * zoomScale < this.options.minZoom * originalState.zoom) {\n      zoomScale = (this.options.minZoom * originalState.zoom) / this.getZoom()\n    } else if (this.getZoom() * zoomScale > this.options.maxZoom * originalState.zoom) {\n      zoomScale = (this.options.maxZoom * originalState.zoom) / this.getZoom()\n    }\n  } else {\n    // Fit zoomScale in set bounds\n    zoomScale = Math.max(this.options.minZoom * originalState.zoom, Math.min(this.options.maxZoom * originalState.zoom, zoomScale))\n    // Find relative scale to achieve desired scale\n    zoomScale = zoomScale/this.getZoom()\n  }\n\n  var oldCTM = this.viewport.getCTM()\n    , relativePoint = point.matrixTransform(oldCTM.inverse())\n    , modifier = this.svg.createSVGMatrix().translate(relativePoint.x, relativePoint.y).scale(zoomScale).translate(-relativePoint.x, -relativePoint.y)\n    , newCTM = oldCTM.multiply(modifier)\n\n  if (newCTM.a !== oldCTM.a) {\n    this.viewport.setCTM(newCTM)\n  }\n}\n\n/**\n * Zoom at center point\n *\n * @param  {Float} scale\n * @param  {Boolean} absolute Marks zoom scale as relative or absolute\n */\nSvgPanZoom.prototype.zoom = function(scale, absolute) {\n  this.zoomAtPoint(scale, SvgUtils.getSvgCenterPoint(this.svg, this.width, this.height), absolute)\n}\n\n/**\n * Zoom used by public instance\n *\n * @param  {Float} scale\n * @param  {Boolean} absolute Marks zoom scale as relative or absolute\n */\nSvgPanZoom.prototype.publicZoom = function(scale, absolute) {\n  if (absolute) {\n    scale = this.computeFromRelativeZoom(scale)\n  }\n\n  this.zoom(scale, absolute)\n}\n\n/**\n * Zoom at point used by public instance\n *\n * @param  {Float} scale\n * @param  {SVGPoint|Object} point    An object that has x and y attributes\n * @param  {Boolean} absolute Marks zoom scale as relative or absolute\n */\nSvgPanZoom.prototype.publicZoomAtPoint = function(scale, point, absolute) {\n  if (absolute) {\n    // Transform zoom into a relative value\n    scale = this.computeFromRelativeZoom(scale)\n  }\n\n  // If not a SVGPoint but has x and y then create a SVGPoint\n  if (Utils.getType(point) !== 'SVGPoint') {\n    if('x' in point && 'y' in point) {\n      point = SvgUtils.createSVGPoint(this.svg, point.x, point.y)\n    } else {\n      throw new Error('Given point is invalid')\n    }\n  }\n\n  this.zoomAtPoint(scale, point, absolute)\n}\n\n/**\n * Get zoom scale\n *\n * @return {Float} zoom scale\n */\nSvgPanZoom.prototype.getZoom = function() {\n  return this.viewport.getZoom()\n}\n\n/**\n * Get zoom scale for public usage\n *\n * @return {Float} zoom scale\n */\nSvgPanZoom.prototype.getRelativeZoom = function() {\n  return this.viewport.getRelativeZoom()\n}\n\n/**\n * Compute actual zoom from public zoom\n *\n * @param  {Float} zoom\n * @return {Float} zoom scale\n */\nSvgPanZoom.prototype.computeFromRelativeZoom = function(zoom) {\n  return zoom * this.viewport.getOriginalState().zoom\n}\n\n/**\n * Set zoom to initial state\n */\nSvgPanZoom.prototype.resetZoom = function() {\n  var originalState = this.viewport.getOriginalState()\n\n  this.zoom(originalState.zoom, true);\n}\n\n/**\n * Set pan to initial state\n */\nSvgPanZoom.prototype.resetPan = function() {\n  this.pan(this.viewport.getOriginalState());\n}\n\n/**\n * Set pan and zoom to initial state\n */\nSvgPanZoom.prototype.reset = function() {\n  this.resetZoom()\n  this.resetPan()\n}\n\n/**\n * Handle double click event\n * See handleMouseDown() for alternate detection method\n *\n * @param {Event} evt\n */\nSvgPanZoom.prototype.handleDblClick = function(evt) {\n  if (this.options.preventMouseEventsDefault) {\n    if (evt.preventDefault) {\n      evt.preventDefault()\n    } else {\n      evt.returnValue = false\n    }\n  }\n\n  // Check if target was a control button\n  if (this.options.controlIconsEnabled) {\n    var targetClass = evt.target.getAttribute('class') || ''\n    if (targetClass.indexOf('svg-pan-zoom-control') > -1) {\n      return false\n    }\n  }\n\n  var zoomFactor\n\n  if (evt.shiftKey) {\n    zoomFactor = 1/((1 + this.options.zoomScaleSensitivity) * 2) // zoom out when shift key pressed\n  } else {\n    zoomFactor = (1 + this.options.zoomScaleSensitivity) * 2\n  }\n\n  var point = SvgUtils.getEventPoint(evt, this.svg).matrixTransform(this.svg.getScreenCTM().inverse())\n  this.zoomAtPoint(zoomFactor, point)\n}\n\n/**\n * Handle click event\n *\n * @param {Event} evt\n */\nSvgPanZoom.prototype.handleMouseDown = function(evt, prevEvt) {\n  if (this.options.preventMouseEventsDefault) {\n    if (evt.preventDefault) {\n      evt.preventDefault()\n    } else {\n      evt.returnValue = false\n    }\n  }\n\n  Utils.mouseAndTouchNormalize(evt, this.svg)\n\n  // Double click detection; more consistent than ondblclick\n  if (this.options.dblClickZoomEnabled && Utils.isDblClick(evt, prevEvt)){\n    this.handleDblClick(evt)\n  } else {\n    // Pan mode\n    this.state = 'pan'\n    this.firstEventCTM = this.viewport.getCTM()\n    this.stateOrigin = SvgUtils.getEventPoint(evt, this.svg).matrixTransform(this.firstEventCTM.inverse())\n  }\n}\n\n/**\n * Handle mouse move event\n *\n * @param  {Event} evt\n */\nSvgPanZoom.prototype.handleMouseMove = function(evt) {\n  if (this.options.preventMouseEventsDefault) {\n    if (evt.preventDefault) {\n      evt.preventDefault()\n    } else {\n      evt.returnValue = false\n    }\n  }\n\n  if (this.state === 'pan' && this.options.panEnabled) {\n    // Pan mode\n    var point = SvgUtils.getEventPoint(evt, this.svg).matrixTransform(this.firstEventCTM.inverse())\n      , viewportCTM = this.firstEventCTM.translate(point.x - this.stateOrigin.x, point.y - this.stateOrigin.y)\n\n    this.viewport.setCTM(viewportCTM)\n  }\n}\n\n/**\n * Handle mouse button release event\n *\n * @param {Event} evt\n */\nSvgPanZoom.prototype.handleMouseUp = function(evt) {\n  if (this.options.preventMouseEventsDefault) {\n    if (evt.preventDefault) {\n      evt.preventDefault()\n    } else {\n      evt.returnValue = false\n    }\n  }\n\n  if (this.state === 'pan') {\n    // Quit pan mode\n    this.state = 'none'\n  }\n}\n\n/**\n * Adjust viewport size (only) so it will fit in SVG\n * Does not center image\n */\nSvgPanZoom.prototype.fit = function() {\n  var viewBox = this.viewport.getViewBox()\n    , newScale = Math.min(this.width/viewBox.width, this.height/viewBox.height)\n\n  this.zoom(newScale, true)\n}\n\n/**\n * Adjust viewport size (only) so it will contain the SVG\n * Does not center image\n */\nSvgPanZoom.prototype.contain = function() {\n  var viewBox = this.viewport.getViewBox()\n    , newScale = Math.max(this.width/viewBox.width, this.height/viewBox.height)\n\n  this.zoom(newScale, true)\n}\n\n/**\n * Adjust viewport pan (only) so it will be centered in SVG\n * Does not zoom/fit/contain image\n */\nSvgPanZoom.prototype.center = function() {\n  var viewBox = this.viewport.getViewBox()\n    , offsetX = (this.width - (viewBox.width + viewBox.x * 2) * this.getZoom()) * 0.5\n    , offsetY = (this.height - (viewBox.height + viewBox.y * 2) * this.getZoom()) * 0.5\n\n  this.getPublicInstance().pan({x: offsetX, y: offsetY})\n}\n\n/**\n * Update content cached BorderBox\n * Use when viewport contents change\n */\nSvgPanZoom.prototype.updateBBox = function() {\n  this.viewport.simpleViewBoxCache()\n}\n\n/**\n * Pan to a rendered position\n *\n * @param  {Object} point {x: 0, y: 0}\n */\nSvgPanZoom.prototype.pan = function(point) {\n  var viewportCTM = this.viewport.getCTM()\n  viewportCTM.e = point.x\n  viewportCTM.f = point.y\n  this.viewport.setCTM(viewportCTM)\n}\n\n/**\n * Relatively pan the graph by a specified rendered position vector\n *\n * @param  {Object} point {x: 0, y: 0}\n */\nSvgPanZoom.prototype.panBy = function(point) {\n  var viewportCTM = this.viewport.getCTM()\n  viewportCTM.e += point.x\n  viewportCTM.f += point.y\n  this.viewport.setCTM(viewportCTM)\n}\n\n/**\n * Get pan vector\n *\n * @return {Object} {x: 0, y: 0}\n */\nSvgPanZoom.prototype.getPan = function() {\n  var state = this.viewport.getState()\n\n  return {x: state.x, y: state.y}\n}\n\n/**\n * Recalculates cached svg dimensions and controls position\n */\nSvgPanZoom.prototype.resize = function() {\n  // Get dimensions\n  var boundingClientRectNormalized = SvgUtils.getBoundingClientRectNormalized(this.svg)\n  this.width = boundingClientRectNormalized.width\n  this.height = boundingClientRectNormalized.height\n\n  // Recalculate original state\n  var viewport = this.viewport\n  viewport.options.width = this.width\n  viewport.options.height = this.height\n  viewport.processCTM()\n\n  // Reposition control icons by re-enabling them\n  if (this.options.controlIconsEnabled) {\n    this.getPublicInstance().disableControlIcons()\n    this.getPublicInstance().enableControlIcons()\n  }\n}\n\n/**\n * Unbind mouse events, free callbacks and destroy public instance\n */\nSvgPanZoom.prototype.destroy = function() {\n  var that = this\n\n  // Free callbacks\n  this.beforeZoom = null\n  this.onZoom = null\n  this.beforePan = null\n  this.onPan = null\n  this.onUpdatedCTM = null\n\n  // Destroy custom event handlers\n  if (this.options.customEventsHandler != null) { // jshint ignore:line\n    this.options.customEventsHandler.destroy({\n      svgElement: this.svg\n    , eventsListenerElement: this.options.eventsListenerElement\n    , instance: this.getPublicInstance()\n    })\n  }\n\n  // Unbind eventListeners\n  for (var event in this.eventListeners) {\n    (this.options.eventsListenerElement || this.svg)\n      .removeEventListener(event, this.eventListeners[event], !this.options.preventMouseEventsDefault ? passiveListenerOption : false)\n  }\n\n  // Unbind wheelListener\n  this.disableMouseWheelZoom()\n\n  // Remove control icons\n  this.getPublicInstance().disableControlIcons()\n\n  // Reset zoom and pan\n  this.reset()\n\n  // Remove instance from instancesStore\n  instancesStore = instancesStore.filter(function(instance){\n    return instance.svg !== that.svg\n  })\n\n  // Delete options and its contents\n  delete this.options\n\n  // Delete viewport to make public shadow viewport functions uncallable\n  delete this.viewport\n\n  // Destroy public instance and rewrite getPublicInstance\n  delete this.publicInstance\n  delete this.pi\n  this.getPublicInstance = function(){\n    return null\n  }\n}\n\n/**\n * Returns a public instance object\n *\n * @return {Object} Public instance object\n */\nSvgPanZoom.prototype.getPublicInstance = function() {\n  var that = this\n\n  // Create cache\n  if (!this.publicInstance) {\n    this.publicInstance = this.pi = {\n      // Pan\n      enablePan: function() {that.options.panEnabled = true; return that.pi}\n    , disablePan: function() {that.options.panEnabled = false; return that.pi}\n    , isPanEnabled: function() {return !!that.options.panEnabled}\n    , pan: function(point) {that.pan(point); return that.pi}\n    , panBy: function(point) {that.panBy(point); return that.pi}\n    , getPan: function() {return that.getPan()}\n      // Pan event\n    , setBeforePan: function(fn) {that.options.beforePan = fn === null ? null : Utils.proxy(fn, that.publicInstance); return that.pi}\n    , setOnPan: function(fn) {that.options.onPan = fn === null ? null : Utils.proxy(fn, that.publicInstance); return that.pi}\n      // Zoom and Control Icons\n    , enableZoom: function() {that.options.zoomEnabled = true; return that.pi}\n    , disableZoom: function() {that.options.zoomEnabled = false; return that.pi}\n    , isZoomEnabled: function() {return !!that.options.zoomEnabled}\n    , enableControlIcons: function() {\n        if (!that.options.controlIconsEnabled) {\n          that.options.controlIconsEnabled = true\n          ControlIcons.enable(that)\n        }\n        return that.pi\n      }\n    , disableControlIcons: function() {\n        if (that.options.controlIconsEnabled) {\n          that.options.controlIconsEnabled = false;\n          ControlIcons.disable(that)\n        }\n        return that.pi\n      }\n    , isControlIconsEnabled: function() {return !!that.options.controlIconsEnabled}\n      // Double click zoom\n    , enableDblClickZoom: function() {that.options.dblClickZoomEnabled = true; return that.pi}\n    , disableDblClickZoom: function() {that.options.dblClickZoomEnabled = false; return that.pi}\n    , isDblClickZoomEnabled: function() {return !!that.options.dblClickZoomEnabled}\n      // Mouse wheel zoom\n    , enableMouseWheelZoom: function() {that.enableMouseWheelZoom(); return that.pi}\n    , disableMouseWheelZoom: function() {that.disableMouseWheelZoom(); return that.pi}\n    , isMouseWheelZoomEnabled: function() {return !!that.options.mouseWheelZoomEnabled}\n      // Zoom scale and bounds\n    , setZoomScaleSensitivity: function(scale) {that.options.zoomScaleSensitivity = scale; return that.pi}\n    , setMinZoom: function(zoom) {that.options.minZoom = zoom; return that.pi}\n    , setMaxZoom: function(zoom) {that.options.maxZoom = zoom; return that.pi}\n      // Zoom event\n    , setBeforeZoom: function(fn) {that.options.beforeZoom = fn === null ? null : Utils.proxy(fn, that.publicInstance); return that.pi}\n    , setOnZoom: function(fn) {that.options.onZoom = fn === null ? null : Utils.proxy(fn, that.publicInstance); return that.pi}\n      // Zooming\n    , zoom: function(scale) {that.publicZoom(scale, true); return that.pi}\n    , zoomBy: function(scale) {that.publicZoom(scale, false); return that.pi}\n    , zoomAtPoint: function(scale, point) {that.publicZoomAtPoint(scale, point, true); return that.pi}\n    , zoomAtPointBy: function(scale, point) {that.publicZoomAtPoint(scale, point, false); return that.pi}\n    , zoomIn: function() {this.zoomBy(1 + that.options.zoomScaleSensitivity); return that.pi}\n    , zoomOut: function() {this.zoomBy(1 / (1 + that.options.zoomScaleSensitivity)); return that.pi}\n    , getZoom: function() {return that.getRelativeZoom()}\n      // CTM update\n    , setOnUpdatedCTM: function(fn) {that.options.onUpdatedCTM = fn === null ? null : Utils.proxy(fn, that.publicInstance); return that.pi}\n      // Reset\n    , resetZoom: function() {that.resetZoom(); return that.pi}\n    , resetPan: function() {that.resetPan(); return that.pi}\n    , reset: function() {that.reset(); return that.pi}\n      // Fit, Contain and Center\n    , fit: function() {that.fit(); return that.pi}\n    , contain: function() {that.contain(); return that.pi}\n    , center: function() {that.center(); return that.pi}\n      // Size and Resize\n    , updateBBox: function() {that.updateBBox(); return that.pi}\n    , resize: function() {that.resize(); return that.pi}\n    , getSizes: function() {\n        return {\n          width: that.width\n        , height: that.height\n        , realZoom: that.getZoom()\n        , viewBox: that.viewport.getViewBox()\n        }\n      }\n      // Destroy\n    , destroy: function() {that.destroy(); return that.pi}\n    }\n  }\n\n  return this.publicInstance\n}\n\n/**\n * Stores pairs of instances of SvgPanZoom and SVG\n * Each pair is represented by an object {svg: SVGSVGElement, instance: SvgPanZoom}\n *\n * @type {Array}\n */\nvar instancesStore = []\n\nvar svgPanZoom = function(elementOrSelector, options){\n  var svg = Utils.getSvg(elementOrSelector)\n\n  if (svg === null) {\n    return null\n  } else {\n    // Look for existent instance\n    for(var i = instancesStore.length - 1; i >= 0; i--) {\n      if (instancesStore[i].svg === svg) {\n        return instancesStore[i].instance.getPublicInstance()\n      }\n    }\n\n    // If instance not found - create one\n    instancesStore.push({\n      svg: svg\n    , instance: new SvgPanZoom(svg, options)\n    })\n\n    // Return just pushed instance\n    return instancesStore[instancesStore.length - 1].instance.getPublicInstance()\n  }\n}\n\nmodule.exports = svgPanZoom;\n","// uniwheel 0.1.2 (customized)\n// A unified cross browser mouse wheel event handler\n// https://github.com/teemualap/uniwheel\n\nmodule.exports = (function(){\n\n  //Full details: https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel\n\n  var prefix = \"\", _addEventListener, _removeEventListener, support, fns = [];\n  var passiveOption = {passive: true};\n\n  // detect event model\n  if ( window.addEventListener ) {\n    _addEventListener = \"addEventListener\";\n    _removeEventListener = \"removeEventListener\";\n  } else {\n    _addEventListener = \"attachEvent\";\n    _removeEventListener = \"detachEvent\";\n    prefix = \"on\";\n  }\n\n  // detect available wheel event\n  support = \"onwheel\" in document.createElement(\"div\") ? \"wheel\" : // Modern browsers support \"wheel\"\n            document.onmousewheel !== undefined ? \"mousewheel\" : // Webkit and IE support at least \"mousewheel\"\n            \"DOMMouseScroll\"; // let's assume that remaining browsers are older Firefox\n\n\n  function createCallback(element,callback) {\n\n    var fn = function(originalEvent) {\n\n      !originalEvent && ( originalEvent = window.event );\n\n      // create a normalized event object\n      var event = {\n        // keep a ref to the original event object\n        originalEvent: originalEvent,\n        target: originalEvent.target || originalEvent.srcElement,\n        type: \"wheel\",\n        deltaMode: originalEvent.type == \"MozMousePixelScroll\" ? 0 : 1,\n        deltaX: 0,\n        delatZ: 0,\n        preventDefault: function() {\n          originalEvent.preventDefault ?\n            originalEvent.preventDefault() :\n            originalEvent.returnValue = false;\n        }\n      };\n\n      // calculate deltaY (and deltaX) according to the event\n      if ( support == \"mousewheel\" ) {\n        event.deltaY = - 1/40 * originalEvent.wheelDelta;\n        // Webkit also support wheelDeltaX\n        originalEvent.wheelDeltaX && ( event.deltaX = - 1/40 * originalEvent.wheelDeltaX );\n      } else {\n        event.deltaY = originalEvent.detail;\n      }\n\n      // it's time to fire the callback\n      return callback( event );\n\n    };\n\n    fns.push({\n      element: element,\n      fn: fn,\n    });\n\n    return fn;\n  }\n\n  function getCallback(element) {\n    for (var i = 0; i < fns.length; i++) {\n      if (fns[i].element === element) {\n        return fns[i].fn;\n      }\n    }\n    return function(){};\n  }\n\n  function removeCallback(element) {\n    for (var i = 0; i < fns.length; i++) {\n      if (fns[i].element === element) {\n        return fns.splice(i,1);\n      }\n    }\n  }\n\n  function _addWheelListener(elem, eventName, callback, isPassiveListener ) {\n    var cb;\n\n    if (support === \"wheel\") {\n      cb = callback;\n    } else {\n      cb = createCallback(elem, callback);\n    }\n\n    elem[_addEventListener](prefix + eventName, cb, isPassiveListener ? passiveOption : false);\n  }\n\n  function _removeWheelListener(elem, eventName, callback, isPassiveListener ) {\n\n    var cb;\n\n    if (support === \"wheel\") {\n      cb = callback;\n    } else {\n      cb = getCallback(elem);\n    }\n\n    elem[_removeEventListener](prefix + eventName, cb, isPassiveListener ? passiveOption : false);\n\n    removeCallback(elem);\n  }\n\n  function addWheelListener( elem, callback, isPassiveListener ) {\n    _addWheelListener(elem, support, callback, isPassiveListener );\n\n    // handle MozMousePixelScroll in older Firefox\n    if( support == \"DOMMouseScroll\" ) {\n      _addWheelListener(elem, \"MozMousePixelScroll\", callback, isPassiveListener );\n    }\n  }\n\n  function removeWheelListener(elem, callback, isPassiveListener){\n    _removeWheelListener(elem, support, callback, isPassiveListener);\n\n    // handle MozMousePixelScroll in older Firefox\n    if( support == \"DOMMouseScroll\" ) {\n      _removeWheelListener(elem, \"MozMousePixelScroll\", callback, isPassiveListener);\n    }\n  }\n\n  return {\n    on: addWheelListener,\n    off: removeWheelListener\n  };\n\n})();\n","var SvgUtils = require('./svg-utilities');\n\nmodule.exports = {\n  enable: function(instance) {\n    // Select (and create if necessary) defs\n    var defs = instance.svg.querySelector('defs')\n    if (!defs) {\n      defs = document.createElementNS(SvgUtils.svgNS, 'defs')\n      instance.svg.appendChild(defs)\n    }\n\n    // Check for style element, and create it if it doesn't exist\n    var styleEl = defs.querySelector('style#svg-pan-zoom-controls-styles');\n    if (!styleEl) {\n      var style = document.createElementNS(SvgUtils.svgNS, 'style')\n      style.setAttribute('id', 'svg-pan-zoom-controls-styles')\n      style.setAttribute('type', 'text/css')\n      style.textContent = '.svg-pan-zoom-control { cursor: pointer; fill: black; fill-opacity: 0.333; } .svg-pan-zoom-control:hover { fill-opacity: 0.8; } .svg-pan-zoom-control-background { fill: white; fill-opacity: 0.5; } .svg-pan-zoom-control-background { fill-opacity: 0.8; }'\n      defs.appendChild(style)\n    }\n\n    // Zoom Group\n    var zoomGroup = document.createElementNS(SvgUtils.svgNS, 'g');\n    zoomGroup.setAttribute('id', 'svg-pan-zoom-controls');\n    zoomGroup.setAttribute('transform', 'translate(' + ( instance.width - 70 ) + ' ' + ( instance.height - 76 ) + ') scale(0.75)');\n    zoomGroup.setAttribute('class', 'svg-pan-zoom-control');\n\n    // Control elements\n    zoomGroup.appendChild(this._createZoomIn(instance))\n    zoomGroup.appendChild(this._createZoomReset(instance))\n    zoomGroup.appendChild(this._createZoomOut(instance))\n\n    // Finally append created element\n    instance.svg.appendChild(zoomGroup)\n\n    // Cache control instance\n    instance.controlIcons = zoomGroup\n  }\n\n, _createZoomIn: function(instance) {\n    var zoomIn = document.createElementNS(SvgUtils.svgNS, 'g');\n    zoomIn.setAttribute('id', 'svg-pan-zoom-zoom-in');\n    zoomIn.setAttribute('transform', 'translate(30.5 5) scale(0.015)');\n    zoomIn.setAttribute('class', 'svg-pan-zoom-control');\n    zoomIn.addEventListener('click', function() {instance.getPublicInstance().zoomIn()}, false)\n    zoomIn.addEventListener('touchstart', function() {instance.getPublicInstance().zoomIn()}, false)\n\n    var zoomInBackground = document.createElementNS(SvgUtils.svgNS, 'rect'); // TODO change these background space fillers to rounded rectangles so they look prettier\n    zoomInBackground.setAttribute('x', '0');\n    zoomInBackground.setAttribute('y', '0');\n    zoomInBackground.setAttribute('width', '1500'); // larger than expected because the whole group is transformed to scale down\n    zoomInBackground.setAttribute('height', '1400');\n    zoomInBackground.setAttribute('class', 'svg-pan-zoom-control-background');\n    zoomIn.appendChild(zoomInBackground);\n\n    var zoomInShape = document.createElementNS(SvgUtils.svgNS, 'path');\n    zoomInShape.setAttribute('d', 'M1280 576v128q0 26 -19 45t-45 19h-320v320q0 26 -19 45t-45 19h-128q-26 0 -45 -19t-19 -45v-320h-320q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45t45 -19h320v-320q0 -26 19 -45t45 -19h128q26 0 45 19t19 45v320h320q26 0 45 19t19 45zM1536 1120v-960 q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z');\n    zoomInShape.setAttribute('class', 'svg-pan-zoom-control-element');\n    zoomIn.appendChild(zoomInShape);\n\n    return zoomIn\n  }\n\n, _createZoomReset: function(instance){\n    // reset\n    var resetPanZoomControl = document.createElementNS(SvgUtils.svgNS, 'g');\n    resetPanZoomControl.setAttribute('id', 'svg-pan-zoom-reset-pan-zoom');\n    resetPanZoomControl.setAttribute('transform', 'translate(5 35) scale(0.4)');\n    resetPanZoomControl.setAttribute('class', 'svg-pan-zoom-control');\n    resetPanZoomControl.addEventListener('click', function() {instance.getPublicInstance().reset()}, false);\n    resetPanZoomControl.addEventListener('touchstart', function() {instance.getPublicInstance().reset()}, false);\n\n    var resetPanZoomControlBackground = document.createElementNS(SvgUtils.svgNS, 'rect'); // TODO change these background space fillers to rounded rectangles so they look prettier\n    resetPanZoomControlBackground.setAttribute('x', '2');\n    resetPanZoomControlBackground.setAttribute('y', '2');\n    resetPanZoomControlBackground.setAttribute('width', '182'); // larger than expected because the whole group is transformed to scale down\n    resetPanZoomControlBackground.setAttribute('height', '58');\n    resetPanZoomControlBackground.setAttribute('class', 'svg-pan-zoom-control-background');\n    resetPanZoomControl.appendChild(resetPanZoomControlBackground);\n\n    var resetPanZoomControlShape1 = document.createElementNS(SvgUtils.svgNS, 'path');\n    resetPanZoomControlShape1.setAttribute('d', 'M33.051,20.632c-0.742-0.406-1.854-0.609-3.338-0.609h-7.969v9.281h7.769c1.543,0,2.701-0.188,3.473-0.562c1.365-0.656,2.048-1.953,2.048-3.891C35.032,22.757,34.372,21.351,33.051,20.632z');\n    resetPanZoomControlShape1.setAttribute('class', 'svg-pan-zoom-control-element');\n    resetPanZoomControl.appendChild(resetPanZoomControlShape1);\n\n    var resetPanZoomControlShape2 = document.createElementNS(SvgUtils.svgNS, 'path');\n    resetPanZoomControlShape2.setAttribute('d', 'M170.231,0.5H15.847C7.102,0.5,0.5,5.708,0.5,11.84v38.861C0.5,56.833,7.102,61.5,15.847,61.5h154.384c8.745,0,15.269-4.667,15.269-10.798V11.84C185.5,5.708,178.976,0.5,170.231,0.5z M42.837,48.569h-7.969c-0.219-0.766-0.375-1.383-0.469-1.852c-0.188-0.969-0.289-1.961-0.305-2.977l-0.047-3.211c-0.03-2.203-0.41-3.672-1.142-4.406c-0.732-0.734-2.103-1.102-4.113-1.102h-7.05v13.547h-7.055V14.022h16.524c2.361,0.047,4.178,0.344,5.45,0.891c1.272,0.547,2.351,1.352,3.234,2.414c0.731,0.875,1.31,1.844,1.737,2.906s0.64,2.273,0.64,3.633c0,1.641-0.414,3.254-1.242,4.84s-2.195,2.707-4.102,3.363c1.594,0.641,2.723,1.551,3.387,2.73s0.996,2.98,0.996,5.402v2.32c0,1.578,0.063,2.648,0.19,3.211c0.19,0.891,0.635,1.547,1.333,1.969V48.569z M75.579,48.569h-26.18V14.022h25.336v6.117H56.454v7.336h16.781v6H56.454v8.883h19.125V48.569z M104.497,46.331c-2.44,2.086-5.887,3.129-10.34,3.129c-4.548,0-8.125-1.027-10.731-3.082s-3.909-4.879-3.909-8.473h6.891c0.224,1.578,0.662,2.758,1.316,3.539c1.196,1.422,3.246,2.133,6.15,2.133c1.739,0,3.151-0.188,4.236-0.562c2.058-0.719,3.087-2.055,3.087-4.008c0-1.141-0.504-2.023-1.512-2.648c-1.008-0.609-2.607-1.148-4.796-1.617l-3.74-0.82c-3.676-0.812-6.201-1.695-7.576-2.648c-2.328-1.594-3.492-4.086-3.492-7.477c0-3.094,1.139-5.664,3.417-7.711s5.623-3.07,10.036-3.07c3.685,0,6.829,0.965,9.431,2.895c2.602,1.93,3.966,4.73,4.093,8.402h-6.938c-0.128-2.078-1.057-3.555-2.787-4.43c-1.154-0.578-2.587-0.867-4.301-0.867c-1.907,0-3.428,0.375-4.565,1.125c-1.138,0.75-1.706,1.797-1.706,3.141c0,1.234,0.561,2.156,1.682,2.766c0.721,0.406,2.25,0.883,4.589,1.43l6.063,1.43c2.657,0.625,4.648,1.461,5.975,2.508c2.059,1.625,3.089,3.977,3.089,7.055C108.157,41.624,106.937,44.245,104.497,46.331z M139.61,48.569h-26.18V14.022h25.336v6.117h-18.281v7.336h16.781v6h-16.781v8.883h19.125V48.569z M170.337,20.14h-10.336v28.43h-7.266V20.14h-10.383v-6.117h27.984V20.14z');\n    resetPanZoomControlShape2.setAttribute('class', 'svg-pan-zoom-control-element');\n    resetPanZoomControl.appendChild(resetPanZoomControlShape2);\n\n    return resetPanZoomControl\n  }\n\n, _createZoomOut: function(instance){\n    // zoom out\n    var zoomOut = document.createElementNS(SvgUtils.svgNS, 'g');\n    zoomOut.setAttribute('id', 'svg-pan-zoom-zoom-out');\n    zoomOut.setAttribute('transform', 'translate(30.5 70) scale(0.015)');\n    zoomOut.setAttribute('class', 'svg-pan-zoom-control');\n    zoomOut.addEventListener('click', function() {instance.getPublicInstance().zoomOut()}, false);\n    zoomOut.addEventListener('touchstart', function() {instance.getPublicInstance().zoomOut()}, false);\n\n    var zoomOutBackground = document.createElementNS(SvgUtils.svgNS, 'rect'); // TODO change these background space fillers to rounded rectangles so they look prettier\n    zoomOutBackground.setAttribute('x', '0');\n    zoomOutBackground.setAttribute('y', '0');\n    zoomOutBackground.setAttribute('width', '1500'); // larger than expected because the whole group is transformed to scale down\n    zoomOutBackground.setAttribute('height', '1400');\n    zoomOutBackground.setAttribute('class', 'svg-pan-zoom-control-background');\n    zoomOut.appendChild(zoomOutBackground);\n\n    var zoomOutShape = document.createElementNS(SvgUtils.svgNS, 'path');\n    zoomOutShape.setAttribute('d', 'M1280 576v128q0 26 -19 45t-45 19h-896q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45t45 -19h896q26 0 45 19t19 45zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5 t84.5 -203.5z');\n    zoomOutShape.setAttribute('class', 'svg-pan-zoom-control-element');\n    zoomOut.appendChild(zoomOutShape);\n\n    return zoomOut\n  }\n\n, disable: function(instance) {\n    if (instance.controlIcons) {\n      instance.controlIcons.parentNode.removeChild(instance.controlIcons)\n      instance.controlIcons = null\n    }\n  }\n}\n","var SvgPanZoom = require('./svg-pan-zoom.js');\n\nmodule.exports = SvgPanZoom;\n"],"sourceRoot":""}